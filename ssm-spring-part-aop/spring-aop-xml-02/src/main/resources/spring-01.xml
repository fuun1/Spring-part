<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

  <context:component-scan base-package="edu.zjgs"/>
  <aop:aspectj-autoproxy/>
  <!-- 配置AOP -->
  <aop:config>

    <!-- 配置切入点表达式 -->
    <aop:pointcut id="pc" expression="execution(* *..*.*(..))"/>

    <!-- aop:aspect标签：配置切面 -->
    <!-- ref属性：关联切面类的bean -->
    <aop:aspect ref="txAdvice" order="5">
      <!-- aop:before标签：配置前置通知 -->
      <!-- method属性：指定前置通知的方法名 -->
      <!-- pointcut-ref属性：引用切入点表达式 -->
      <aop:before method="before" pointcut-ref="pc"/>

      <!-- aop:after-returning标签：配置返回通知 -->
      <!-- returning属性：指定通知方法中用来接收目标方法返回值的参数名 -->
      <aop:after-returning method="afterReturning" pointcut-ref="pc" returning="result"/>

      <!-- aop:after-throwing标签：配置异常通知 -->
      <!-- throwing属性：指定通知方法中用来接收目标方法抛出异常的异常对象的参数名 -->
      <aop:after-throwing method="AfterThrowing" pointcut-ref="pc" throwing="throwable"/>

      <!-- aop:after标签：配置后置通知 -->
      <aop:after method="after" pointcut-ref="pc"/>

      <!-- aop:around标签：配置环绕通知 -->
      <!--<aop:around method="……" pointcut-ref="logPointCut"/>-->
    </aop:aspect>

  </aop:config>
</beans>